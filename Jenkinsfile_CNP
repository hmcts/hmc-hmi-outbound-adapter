#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "hmc"
def component = "hmi-outbound-adapter"
def branchesToSync = ['demo', 'ithc', 'perftest']

GradleBuilder builder = new GradleBuilder(this, product)

// env variables needed for BEFTA.
env.CCD_API_GATEWAY_OAUTH2_CLIENT_ID = "ccd_gateway"
env.IDAM_API_URL_BASE = "https://idam-api.aat.platform.hmcts.net"
env.S2S_URL_BASE = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
env.BEFTA_S2S_CLIENT_ID = "ccd_gw"
env.BEFTA_RESPONSE_HEADER_CHECK_POLICY="JUST_WARN"
env.OAUTH2_CLIENT_ID = "ccd_gateway"
env.OAUTH2_REDIRECT_URI = "https://www-ccd.aat.platform.hmcts.net/oauth2redirect"

withPipeline(type, product, component) {
  syncBranchesWithMaster(branchesToSync)
  enableAksStagingDeployment()
  disableLegacyDeployment()

  afterAlways('test') {
    builder.gradle('integration')
    // hmcts/cnp-jenkins-library may fail to copy artifacts after checkstyle error so repeat command (see /src/uk/gov/hmcts/contino/GradleBuilder.groovy)
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/checkstyle/*.html'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/pmd/*.html'

    //copyIgnore('./build/reports/tests/test', './Unit Tests/')
    //copyIgnore('./build/reports/tests/integration', './Integration Tests/')
    //steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Unit Tests/**/*'
    //steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Integration Tests/**/*'

    publishHTML target: [
          allowMissing         : true,
          alwaysLinkToLastBuild: true,
          keepAll              : true,
          reportDir            : 'build/reports/tests/test',
          reportFiles          : "index.html",
          reportName           : "Unit Test Report"
      ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : 'build/reports/tests/integration',
      reportFiles          : "index.html",
      reportName           : "Integration Test Report"
    ]
  
  }

  afterAlways('smoketest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/BEFTA Report for Smoke Tests/**/*'
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : 'BEFTA Report for Smoke Tests',
      reportFiles          : "overview-features.html",
      reportName           : "Smoke Test Report"
    ]
  }

  afterAlways('smoketest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/BEFTA Report for Smoke Tests/**/*'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : 'BEFTA Report for Smoke Tests',
            reportFiles          : "overview-features.html",
            reportName           : "Smoke Test Report"
    ]
  }

  afterAlways('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/BEFTA Report for Functional Tests/**/*'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : 'BEFTA Report for Functional Tests',
            reportFiles          : "overview-features.html",
            reportName           : "Functional Test Report"
    ]
  }

  afterAlways('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/BEFTA Report for Functional Tests/**/*'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : 'BEFTA Report for Functional Tests',
            reportFiles          : "overview-features.html",
            reportName           : "Functional Test Report"
    ]
  }

  afterAlways('pact-provider-verification') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/**/*'
        publishHTML target: [
             allowMissing         : true,
             alwaysLinkToLastBuild: true,
             keepAll              : true,
            reportDir            : "build/reports/tests/runProviderPactVerification",
            reportFiles          : "index.html",
            reportName           : "Contract Tests Report"
        ]
    }
}


